package ascii;

public class bird {

	public void start() {System.out.println("\r\n"
			   + "     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣤⣤⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			   + "     ⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀\r\n"
			   + "     ⠀⠀⠀⠀⠀⠀⣰⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀\r\n"
			   + "     ⠀⠀⠀⠀⠀⠚⠛⠛⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀\r\n"
			   + "     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀\r\n"
			   + "     ⠀⠀⠀⠀⣾⣿⣿⣿⣶⣶⣦⣤⣤⣄⣀⣰⣿⣿⣿⣿⠟⠋⠉⠉⠉⠉⠙⠻⢿⣷⠀⠀\r\n"
		   	   + "⠀     ⠀⠀⠀⠙⠛⠛⠻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠁⠀⠀⣀⣤⣤⣀⡀⠀⠀⠙⠇⠀\r\n"
			   + "⠀⠀     ⣀⣀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣿⣿⣿⠇⠀⠀⣴⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀\r\n"
			   + "⠀⠀     ⣿⣿⣿⣿⣿⣶⣶⣶⣤⡀⠀⠀⢻⣿⡟⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀\r\n"
			   + "⠀⠀     ⠛⠻⠿⢿⣿⣿⣿⣿⣿⡗⠀⠀⢸⣿⡇⠀⠀⣼⣿⣿⡇⠀⠀⢹⣿⣿⡇⠀⠀⠀\r\n"
			   + "⠀     ⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⢀⣾⣿⠃⠀⢀⣿⣿⣿⠇⠀⠀ ⣿⣿⣿⠇⠀⠀⠀\r\n"
			   + "⠀⠀     ⠀⢳⣶⣶⣤⣤⣤⣀⣀⣠⣴⣿⣿⡿⠀⠀⢸⣿⣿⣿⠀⠀ ⢸⣿⣿⣿⠀⠀⠀⠀\r\n"
			   + "⠀⠀⠀     ⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣦⣼⣿⣿⣟⡀⠀⢸⣿⣿⡿⠀⠀⠀⠀\r\n"
			   + "⠀⠀⠀⠀     ⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀\r\n"
			   + "⠀⠀⠀⠀⠀⠀     ⠀⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀\r\n"
			   + "⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⠀⠉⠛⠻⠿⢿⣿⣿⣿⠿⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ ""
        +" #####    #####    ######     ##     #    #           \r\n"
+          "  #   #   #    #   #         #  #    #   #            \r\n"
+          "  #   #   #    #   #        #    #   #  #       ##    \r\n"
+          "  ####    #####    ####     ######   ###        ##    \r\n"
+          "  #   #   #  #     #        #    #   #  #             \r\n"
+          "  #   #   #   #    #        #    #   #   #      ##    \r\n"
+          " #####    #    #   ######   #    #   #    #     ##    \r\n"
+          "                                               ##     ");}
	
	
	public void birdEat() {System.out.println("\r\n"
			+ "⠀⠀⠀⠀⠀⢀⣠⣴⣶⣿⣿⣶⣦⣤⣶⡀⠀⢀⣴⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⢰⣿⣿⠟⠉⢉⣿⣿⣿⣿⣿⣿⣷⣿⣿⣷⣾⡿⠟⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⣤⣤⣄⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⢸⣿⡇⠀⠀⣾⣿⣿⣿⣿⠀⠉⠙⠿⣿⣿⣿⣿⣿⣦⡀⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀\r\n"
			+ "⠀⠀⠠⣄⣘⣿⣷⡀⠀⢿⣿⣿⣿⣿⣄⠀⣤⣶⣄⣀⠄⠄⣹⣿⡗⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⠀\r\n"
			+ "⠀⠀⣶⠟⠋⢻⣿⣿⣶⡀⢿⣿⣿⣿⣽⣾⣽⠿⠟⠿⠿⠿⠟⠋⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀\r\n"
			+ "⠀⠀⡏⠀⠀⢸⣿⠈⢿⣿⡌⢿⣿⣿⣹⣿⣿⣷⣦⣄⡀⢀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀\r\n"
			+ "⠀⠀⡇⠀⠀⢸⣻⣄⣼⣿⠇⠘⣿⣿⣺⣻⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀\r\n"
			+ "⠀⠈⠀⠀⠀⠀⠙⠛⠛⠋⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀\r\n"
			+ "⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀\r\n"
			+ "⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\r\n"
			+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\r\n"
			+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\r\n"
			+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\r\n"
			+ "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\r\n"
			+ "⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠉⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⡇\r\n"
			+ "⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠁⠟⢿⡿⣿⣿⣿⣇\r\n"
			+ "⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠈⠁⠻⡏⢻⣿\r\n"
			+ "⠀⠀⠈⢿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⠀⠀⠀⠀⠀⠀⠀⠙\r\n"
			+ "⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡌⠀⠀⢸⣿⣿⣿⣿⣿⣯⣿⣿⣿⣽⣮⣷⣿⣿⣿⣦⡀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⡻⡇⠀⠀⠀⣾⣿⣿⣻⣿⣿⣿⡿⣟⣿⣿⣟⣿⣿⣿⣿⣿⣿⠆⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⣿⣿⣿⣿⣿⣏⣿⣿⣽⣞⣻⣿⣿⣿⣷⣭⣻⡌⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⡈⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⢿⣿⣷⢻⣷⡹⣿⣿⣿⠈⠀⠁⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⠙⠃⠀⠀⠀⠘⠟⢻⣿⣿⡿⢿⣿⣿⢿⣿⣻⡾⠈⠛⠚⠆⠀⠀⠀⠀⠀\r\n"
			+ "⠶⠶⠶⠶⠶⠶⠀⠀⠀⠀⠀⠀⠈⠻⠀⠀⠀⠀⠀⠀⠀⠈⠀⠘⠀⠀⠛⠇⠀⠈⠻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "");}
	public void birdPlay() {System.out.println("\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡿⣿⣤⣇⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⢈⣿⣷⠈⠀⠀⠈⠉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣏⠀⠴⣤⣤⣤⣤⣾⣷⠀⠀⠀⠀  훈련 시러~   \r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣇⠀⠀⠙⢛⣷⣿⡍⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡆⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⠀⠀⠀⢾⣿⣿⣿⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣷⣄⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠇⠀⣀⠀⠈⠛⢿⣿⠀⣇⣀⠀⠀⠀⠀⠀⠀⠀⣾⡝⠉⠈⠸⣿⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⣠⡏⠀⠀⢹⣦⣆⣀⣀⣡⣾⡋⠉⠉⠉⠙⠛⠛⠛⠛⣿⠁⠀⠀⠀⣇⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⢛⡿⠿⠾⠾⣫⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⡼⠃⠀⠀⠀⢀⠀⠈⠉⣟⣋⣫⡏⠀⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⣼⠁⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⡟⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⢀⣀⣠⠞⠉⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠶⠛⠛⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "");}
	public void birdSleep() {System.out.println("\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⣩⡿⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠶⠶⣶⠆⠀⠀⠀⠀⠀⠀⠀⠀⣴⠞⠉⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠛⠶⠿⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠶⠶⠶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢉⣽⣏⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⣀⣤⣤⣤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⢀⣴⠟⠋⠉⠀⠀⠉⠉⠉⠻⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⣿⠀⠀⠀⠀⣀⣀⣀⣀⣤⣤⣤⣄⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⣿⢸⣷⣶⡆⠀⠀⠐⣷⣾⠿⠀⠀⠀⢠⣿⣤⡶⠾⠛⠉⠉⠉⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠙⠛⠶⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠘⢷⣌⣁⣀⡀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠷⢦⣄⣀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⢠⡟⠉⠉⠙⣶⠀⠀⠀⠀⠀⠀⠚⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣻⡆⠀⠀⠀⠀\r\n"
			+ "⠀⠀⢀⣾⠃⠀⢀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠈⠷⠤⠶⢟⠁⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠋⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⣸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠶⠛⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠶⠶⠶⠶⠶⠶⠶⠶⠚⠛⠋⠉⠁⠀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠹⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠳⢦⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣠⣤⠴⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n"
			+ "");}
	
}
